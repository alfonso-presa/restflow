buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

jar {
    baseName = 'restflow'
    version = '0.1.0'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

def user = hasProperty('mavenUser') ? mavenUser : System.getenv('mavenUser')
def password = hasProperty('mavenPassword') ? mavenPassword : System.getenv('mavenPassword')

def isReleaseVersion = !jar.version.endsWith("SNAPSHOT")

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: user, password: password)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: user, password: password)
            }

            pom.version = '0.1.0'
            pom.artifactId = "restflow"
            pom.groupId = "com.github.alfonso-presa.restflow"

            pom.project {
                name 'restflow'
                packaging 'jar'
                description 'Lightweight state machine library that allows to easily implement bean flows'

                url 'https://github.com/alfonso-presa/restflow'

                scm {
                    url 'https://github.com/alfonso-presa/restflow'
                    connection 'scm:git@github.com:alfonso-presa/restflow.git'
                    developerConnection 'scm:git@github.com:alfonso-presa/restflow.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'alfonso-presa'
                        name 'alfonso.presa@gmail.com'
                    }
                }
            }
        }
    }
}


dependencies {
	testCompile 'junit:junit:4.12'
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
